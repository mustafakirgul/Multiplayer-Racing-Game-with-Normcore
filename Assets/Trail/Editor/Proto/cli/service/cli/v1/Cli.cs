#if CSHARP_7_3_OR_NEWER
// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: trail/cli/service/cli/v1/cli.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Trail.Cli.Service.Cli.V1 {

  /// <summary>Holder for reflection information generated from trail/cli/service/cli/v1/cli.proto</summary>
  public static partial class CliReflection {

    #region Descriptor
    /// <summary>File descriptor for trail/cli/service/cli/v1/cli.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static CliReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiJ0cmFpbC9jbGkvc2VydmljZS9jbGkvdjEvY2xpLnByb3RvEhh0cmFpbC5j",
            "bGkuc2VydmljZS5jbGkudjEaG2dvb2dsZS9wcm90b2J1Zi9lbXB0eS5wcm90",
            "byK7AQoIUHJvZ3Jlc3MSEQoHc3VjY2VzcxgBIAEoCUgAEg4KBGluZm8YAiAB",
            "KAlIABI7CgZ1cGRhdGUYAyABKAsyKS50cmFpbC5jbGkuc2VydmljZS5jbGku",
            "djEuUHJvZ3Jlc3MuVXBkYXRlSAASDQoDZW5kGAQgASgNSAAaNQoGVXBkYXRl",
            "EgoKAmlkGAEgASgNEhAKCHByb2dyZXNzGAIgASgCEg0KBXRpdGxlGAMgASgJ",
            "QgkKB3BheWxvYWQiEwoRR2V0TG9naW5TdGF0dXNSZXEigwEKEUdldExvZ2lu",
            "U3RhdHVzUmVzEkYKB3BheWxvYWQYASABKAsyMy50cmFpbC5jbGkuc2Vydmlj",
            "ZS5jbGkudjEuR2V0TG9naW5TdGF0dXNSZXMuUGF5bG9hZEgAGh8KB1BheWxv",
            "YWQSFAoMaXNfbG9nZ2VkX2luGAEgASgIQgUKA3JlcyIrCghMb2dJblJlcRIN",
            "CgVlbWFpbBgBIAEoCRIQCghwYXNzd29yZBgCIAEoCSKsAgoITG9nSW5SZXMS",
            "PQoHcGF5bG9hZBgBIAEoCzIqLnRyYWlsLmNsaS5zZXJ2aWNlLmNsaS52MS5M",
            "b2dJblJlcy5QYXlsb2FkSAASOQoFZXJyb3IYAiABKAsyKC50cmFpbC5jbGku",
            "c2VydmljZS5jbGkudjEuTG9nSW5SZXMuRXJyb3JIABJfChlpbnZhbGlkX2Ny",
            "ZWRlbnRpYWxzX2Vycm9yGAMgASgLMjoudHJhaWwuY2xpLnNlcnZpY2UuY2xp",
            "LnYxLkxvZ0luUmVzLkludmFsaWRDcmVkZW50aWFsc0Vycm9ySAAaCQoHUGF5",
            "bG9hZBoYCgVFcnJvchIPCgdtZXNzYWdlGAEgASgJGhkKF0ludmFsaWRDcmVk",
            "ZW50aWFsc0Vycm9yQgUKA3JlcyILCglMb2dPdXRSZXEiXQoJTG9nT3V0UmVz",
            "Ej4KB3BheWxvYWQYASABKAsyKy50cmFpbC5jbGkuc2VydmljZS5jbGkudjEu",
            "TG9nT3V0UmVzLlBheWxvYWRIABoJCgdQYXlsb2FkQgUKA3JlcyIOCgxMaXN0",
            "R2FtZXNSZXEiqAIKDExpc3RHYW1lc1JlcxJBCgdwYXlsb2FkGAEgASgLMi4u",
            "dHJhaWwuY2xpLnNlcnZpY2UuY2xpLnYxLkxpc3RHYW1lc1Jlcy5QYXlsb2Fk",
            "SAASPQoFZXJyb3IYAiABKAsyLC50cmFpbC5jbGkuc2VydmljZS5jbGkudjEu",
            "TGlzdEdhbWVzUmVzLkVycm9ySAAadQoHUGF5bG9hZBJCCgVnYW1lcxgBIAMo",
            "CzIzLnRyYWlsLmNsaS5zZXJ2aWNlLmNsaS52MS5MaXN0R2FtZXNSZXMuUGF5",
            "bG9hZC5HYW1lGiYKBEdhbWUSDwoHZ2FtZV9pZBgBIAEoCRINCgV0aXRsZRgC",
            "IAEoCRoYCgVFcnJvchIPCgdtZXNzYWdlGAEgASgJQgUKA3JlcyIyChFJbml0",
            "aWFsaXplR2FtZVJlcRIMCgRwYXRoGAEgASgJEg8KB2dhbWVfaWQYAiABKAki",
            "ywEKEUluaXRpYWxpemVHYW1lUmVzEkYKB3BheWxvYWQYASABKAsyMy50cmFp",
            "bC5jbGkuc2VydmljZS5jbGkudjEuSW5pdGlhbGl6ZUdhbWVSZXMuUGF5bG9h",
            "ZEgAEkIKBWVycm9yGAIgASgLMjEudHJhaWwuY2xpLnNlcnZpY2UuY2xpLnYx",
            "LkluaXRpYWxpemVHYW1lUmVzLkVycm9ySAAaCQoHUGF5bG9hZBoYCgVFcnJv",
            "chIPCgdtZXNzYWdlGAEgASgJQgUKA3JlcyJQCg5VcGxvYWRCdWlsZFJlcRIS",
            "CgpidWlsZF9wYXRoGAEgASgJEhQKDHByb2plY3RfcGF0aBgCIAEoCRIUCgxw",
            "dXNoX2NoYW5uZWwYAyABKAki+gEKDlVwbG9hZEJ1aWxkUmVzEkMKB3BheWxv",
            "YWQYASABKAsyMC50cmFpbC5jbGkuc2VydmljZS5jbGkudjEuVXBsb2FkQnVp",
            "bGRSZXMuUGF5bG9hZEgAEjYKCHByb2dyZXNzGAIgASgLMiIudHJhaWwuY2xp",
            "LnNlcnZpY2UuY2xpLnYxLlByb2dyZXNzSAASPwoFZXJyb3IYAyABKAsyLi50",
            "cmFpbC5jbGkuc2VydmljZS5jbGkudjEuVXBsb2FkQnVpbGRSZXMuRXJyb3JI",
            "ABoJCgdQYXlsb2FkGhgKBUVycm9yEg8KB21lc3NhZ2UYASABKAlCBQoDcmVz",
            "IpwBCg9SdW5EZXZTZXJ2ZXJSZXESQAoFc3RhcnQYASABKAsyLy50cmFpbC5j",
            "bGkuc2VydmljZS5jbGkudjEuUnVuRGV2U2VydmVyUmVxLlN0YXJ0SAAaPAoF",
            "U3RhcnQSFAoMcHJvamVjdF9wYXRoGAEgASgJEgwKBHBvcnQYAiABKA0SDwoH",
            "cm9vbV9pZBgDIAEoCUIJCgdwYXlsb2FkIooCCg9SdW5EZXZTZXJ2ZXJSZXMS",
            "KQoHc3RhcnRlZBgBIAEoCzIWLmdvb2dsZS5wcm90b2J1Zi5FbXB0eUgAEkAK",
            "BWVycm9yGAIgASgLMi8udHJhaWwuY2xpLnNlcnZpY2UuY2xpLnYxLlJ1bkRl",
            "dlNlcnZlclJlcy5FcnJvckgAEjIKEHBsYXllcl9jb25uZWN0ZWQYAyABKAsy",
            "Fi5nb29nbGUucHJvdG9idWYuRW1wdHlIABI1ChNwbGF5ZXJfZGlzY29ubmVj",
            "dGVkGAQgASgLMhYuZ29vZ2xlLnByb3RvYnVmLkVtcHR5SAAaGAoFRXJyb3IS",
            "DwoHbWVzc2FnZRgBIAEoCUIFCgNyZXMimgEKC1J1bkJ1aWxkUmVxEjwKBXN0",
            "YXJ0GAEgASgLMisudHJhaWwuY2xpLnNlcnZpY2UuY2xpLnYxLlJ1bkJ1aWxk",
            "UmVxLlN0YXJ0SAAaQgoFU3RhcnQSFAoMcHJvamVjdF9wYXRoGAEgASgJEhIK",
            "CmJ1aWxkX3BhdGgYAiABKAkSDwoHcm9vbV9pZBgDIAEoCUIJCgdwYXlsb2Fk",
            "IqQBCgtSdW5CdWlsZFJlcxI2Cghwcm9ncmVzcxgBIAEoCzIiLnRyYWlsLmNs",
            "aS5zZXJ2aWNlLmNsaS52MS5Qcm9ncmVzc0gAEjwKBWVycm9yGAIgASgLMisu",
            "dHJhaWwuY2xpLnNlcnZpY2UuY2xpLnYxLlJ1bkJ1aWxkUmVzLkVycm9ySAAa",
            "GAoFRXJyb3ISDwoHbWVzc2FnZRgBIAEoCUIFCgNyZXMyowYKCkNMSVNlcnZp",
            "Y2USbAoOR2V0TG9naW5TdGF0dXMSKy50cmFpbC5jbGkuc2VydmljZS5jbGku",
            "djEuR2V0TG9naW5TdGF0dXNSZXEaKy50cmFpbC5jbGkuc2VydmljZS5jbGku",
            "djEuR2V0TG9naW5TdGF0dXNSZXMiABJRCgVMb2dJbhIiLnRyYWlsLmNsaS5z",
            "ZXJ2aWNlLmNsaS52MS5Mb2dJblJlcRoiLnRyYWlsLmNsaS5zZXJ2aWNlLmNs",
            "aS52MS5Mb2dJblJlcyIAElQKBkxvZ091dBIjLnRyYWlsLmNsaS5zZXJ2aWNl",
            "LmNsaS52MS5Mb2dPdXRSZXEaIy50cmFpbC5jbGkuc2VydmljZS5jbGkudjEu",
            "TG9nT3V0UmVzIgASXQoJTGlzdEdhbWVzEiYudHJhaWwuY2xpLnNlcnZpY2Uu",
            "Y2xpLnYxLkxpc3RHYW1lc1JlcRomLnRyYWlsLmNsaS5zZXJ2aWNlLmNsaS52",
            "MS5MaXN0R2FtZXNSZXMiABJsCg5Jbml0aWFsaXplR2FtZRIrLnRyYWlsLmNs",
            "aS5zZXJ2aWNlLmNsaS52MS5Jbml0aWFsaXplR2FtZVJlcRorLnRyYWlsLmNs",
            "aS5zZXJ2aWNlLmNsaS52MS5Jbml0aWFsaXplR2FtZVJlcyIAEmUKC1VwbG9h",
            "ZEJ1aWxkEigudHJhaWwuY2xpLnNlcnZpY2UuY2xpLnYxLlVwbG9hZEJ1aWxk",
            "UmVxGigudHJhaWwuY2xpLnNlcnZpY2UuY2xpLnYxLlVwbG9hZEJ1aWxkUmVz",
            "IgAwARJqCgxSdW5EZXZTZXJ2ZXISKS50cmFpbC5jbGkuc2VydmljZS5jbGku",
            "djEuUnVuRGV2U2VydmVyUmVxGikudHJhaWwuY2xpLnNlcnZpY2UuY2xpLnYx",
            "LlJ1bkRldlNlcnZlclJlcyIAKAEwARJeCghSdW5CdWlsZBIlLnRyYWlsLmNs",
            "aS5zZXJ2aWNlLmNsaS52MS5SdW5CdWlsZFJlcRolLnRyYWlsLmNsaS5zZXJ2",
            "aWNlLmNsaS52MS5SdW5CdWlsZFJlcyIAKAEwAUJAWj5naXRsYWIuY29tL3Ry",
            "YWlsZ2FtZXMvZ28tZ2VucHJvdG8vdHJhaWwvY2xpL3NlcnZpY2UvY2xpL3Yx",
            "O2NsaWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.EmptyReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Trail.Cli.Service.Cli.V1.Progress), global::Trail.Cli.Service.Cli.V1.Progress.Parser, new[]{ "Success", "Info", "Update", "End" }, new[]{ "Payload" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Trail.Cli.Service.Cli.V1.Progress.Types.Update), global::Trail.Cli.Service.Cli.V1.Progress.Types.Update.Parser, new[]{ "Id", "Progress", "Title" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Trail.Cli.Service.Cli.V1.GetLoginStatusReq), global::Trail.Cli.Service.Cli.V1.GetLoginStatusReq.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Trail.Cli.Service.Cli.V1.GetLoginStatusRes), global::Trail.Cli.Service.Cli.V1.GetLoginStatusRes.Parser, new[]{ "Payload" }, new[]{ "Res" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Trail.Cli.Service.Cli.V1.GetLoginStatusRes.Types.Payload), global::Trail.Cli.Service.Cli.V1.GetLoginStatusRes.Types.Payload.Parser, new[]{ "IsLoggedIn" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Trail.Cli.Service.Cli.V1.LogInReq), global::Trail.Cli.Service.Cli.V1.LogInReq.Parser, new[]{ "Email", "Password" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Trail.Cli.Service.Cli.V1.LogInRes), global::Trail.Cli.Service.Cli.V1.LogInRes.Parser, new[]{ "Payload", "Error", "InvalidCredentialsError" }, new[]{ "Res" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Trail.Cli.Service.Cli.V1.LogInRes.Types.Payload), global::Trail.Cli.Service.Cli.V1.LogInRes.Types.Payload.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Trail.Cli.Service.Cli.V1.LogInRes.Types.Error), global::Trail.Cli.Service.Cli.V1.LogInRes.Types.Error.Parser, new[]{ "Message" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Trail.Cli.Service.Cli.V1.LogInRes.Types.InvalidCredentialsError), global::Trail.Cli.Service.Cli.V1.LogInRes.Types.InvalidCredentialsError.Parser, null, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Trail.Cli.Service.Cli.V1.LogOutReq), global::Trail.Cli.Service.Cli.V1.LogOutReq.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Trail.Cli.Service.Cli.V1.LogOutRes), global::Trail.Cli.Service.Cli.V1.LogOutRes.Parser, new[]{ "Payload" }, new[]{ "Res" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Trail.Cli.Service.Cli.V1.LogOutRes.Types.Payload), global::Trail.Cli.Service.Cli.V1.LogOutRes.Types.Payload.Parser, null, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Trail.Cli.Service.Cli.V1.ListGamesReq), global::Trail.Cli.Service.Cli.V1.ListGamesReq.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Trail.Cli.Service.Cli.V1.ListGamesRes), global::Trail.Cli.Service.Cli.V1.ListGamesRes.Parser, new[]{ "Payload", "Error" }, new[]{ "Res" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Trail.Cli.Service.Cli.V1.ListGamesRes.Types.Payload), global::Trail.Cli.Service.Cli.V1.ListGamesRes.Types.Payload.Parser, new[]{ "Games" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Trail.Cli.Service.Cli.V1.ListGamesRes.Types.Payload.Types.Game), global::Trail.Cli.Service.Cli.V1.ListGamesRes.Types.Payload.Types.Game.Parser, new[]{ "GameId", "Title" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Trail.Cli.Service.Cli.V1.ListGamesRes.Types.Error), global::Trail.Cli.Service.Cli.V1.ListGamesRes.Types.Error.Parser, new[]{ "Message" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Trail.Cli.Service.Cli.V1.InitializeGameReq), global::Trail.Cli.Service.Cli.V1.InitializeGameReq.Parser, new[]{ "Path", "GameId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Trail.Cli.Service.Cli.V1.InitializeGameRes), global::Trail.Cli.Service.Cli.V1.InitializeGameRes.Parser, new[]{ "Payload", "Error" }, new[]{ "Res" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Trail.Cli.Service.Cli.V1.InitializeGameRes.Types.Payload), global::Trail.Cli.Service.Cli.V1.InitializeGameRes.Types.Payload.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Trail.Cli.Service.Cli.V1.InitializeGameRes.Types.Error), global::Trail.Cli.Service.Cli.V1.InitializeGameRes.Types.Error.Parser, new[]{ "Message" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Trail.Cli.Service.Cli.V1.UploadBuildReq), global::Trail.Cli.Service.Cli.V1.UploadBuildReq.Parser, new[]{ "BuildPath", "ProjectPath", "PushChannel" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Trail.Cli.Service.Cli.V1.UploadBuildRes), global::Trail.Cli.Service.Cli.V1.UploadBuildRes.Parser, new[]{ "Payload", "Progress", "Error" }, new[]{ "Res" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Trail.Cli.Service.Cli.V1.UploadBuildRes.Types.Payload), global::Trail.Cli.Service.Cli.V1.UploadBuildRes.Types.Payload.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Trail.Cli.Service.Cli.V1.UploadBuildRes.Types.Error), global::Trail.Cli.Service.Cli.V1.UploadBuildRes.Types.Error.Parser, new[]{ "Message" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Trail.Cli.Service.Cli.V1.RunDevServerReq), global::Trail.Cli.Service.Cli.V1.RunDevServerReq.Parser, new[]{ "Start" }, new[]{ "Payload" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Trail.Cli.Service.Cli.V1.RunDevServerReq.Types.Start), global::Trail.Cli.Service.Cli.V1.RunDevServerReq.Types.Start.Parser, new[]{ "ProjectPath", "Port", "RoomId" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Trail.Cli.Service.Cli.V1.RunDevServerRes), global::Trail.Cli.Service.Cli.V1.RunDevServerRes.Parser, new[]{ "Started", "Error", "PlayerConnected", "PlayerDisconnected" }, new[]{ "Res" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Trail.Cli.Service.Cli.V1.RunDevServerRes.Types.Error), global::Trail.Cli.Service.Cli.V1.RunDevServerRes.Types.Error.Parser, new[]{ "Message" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Trail.Cli.Service.Cli.V1.RunBuildReq), global::Trail.Cli.Service.Cli.V1.RunBuildReq.Parser, new[]{ "Start" }, new[]{ "Payload" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Trail.Cli.Service.Cli.V1.RunBuildReq.Types.Start), global::Trail.Cli.Service.Cli.V1.RunBuildReq.Types.Start.Parser, new[]{ "ProjectPath", "BuildPath", "RoomId" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Trail.Cli.Service.Cli.V1.RunBuildRes), global::Trail.Cli.Service.Cli.V1.RunBuildRes.Parser, new[]{ "Progress", "Error" }, new[]{ "Res" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Trail.Cli.Service.Cli.V1.RunBuildRes.Types.Error), global::Trail.Cli.Service.Cli.V1.RunBuildRes.Types.Error.Parser, new[]{ "Message" }, null, null, null, null)})
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class Progress : pb::IMessage<Progress> {
    private static readonly pb::MessageParser<Progress> _parser = new pb::MessageParser<Progress>(() => new Progress());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Progress> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Trail.Cli.Service.Cli.V1.CliReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Progress() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Progress(Progress other) : this() {
      switch (other.PayloadCase) {
        case PayloadOneofCase.Success:
          Success = other.Success;
          break;
        case PayloadOneofCase.Info:
          Info = other.Info;
          break;
        case PayloadOneofCase.Update:
          Update = other.Update.Clone();
          break;
        case PayloadOneofCase.End:
          End = other.End;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Progress Clone() {
      return new Progress(this);
    }

    /// <summary>Field number for the "success" field.</summary>
    public const int SuccessFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Success {
      get { return payloadCase_ == PayloadOneofCase.Success ? (string) payload_ : ""; }
      set {
        payload_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        payloadCase_ = PayloadOneofCase.Success;
      }
    }

    /// <summary>Field number for the "info" field.</summary>
    public const int InfoFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Info {
      get { return payloadCase_ == PayloadOneofCase.Info ? (string) payload_ : ""; }
      set {
        payload_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        payloadCase_ = PayloadOneofCase.Info;
      }
    }

    /// <summary>Field number for the "update" field.</summary>
    public const int UpdateFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Trail.Cli.Service.Cli.V1.Progress.Types.Update Update {
      get { return payloadCase_ == PayloadOneofCase.Update ? (global::Trail.Cli.Service.Cli.V1.Progress.Types.Update) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.Update;
      }
    }

    /// <summary>Field number for the "end" field.</summary>
    public const int EndFieldNumber = 4;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint End {
      get { return payloadCase_ == PayloadOneofCase.End ? (uint) payload_ : 0; }
      set {
        payload_ = value;
        payloadCase_ = PayloadOneofCase.End;
      }
    }

    private object payload_;
    /// <summary>Enum of possible cases for the "payload" oneof.</summary>
    public enum PayloadOneofCase {
      None = 0,
      Success = 1,
      Info = 2,
      Update = 3,
      End = 4,
    }
    private PayloadOneofCase payloadCase_ = PayloadOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PayloadOneofCase PayloadCase {
      get { return payloadCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearPayload() {
      payloadCase_ = PayloadOneofCase.None;
      payload_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Progress);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Progress other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Success != other.Success) return false;
      if (Info != other.Info) return false;
      if (!object.Equals(Update, other.Update)) return false;
      if (End != other.End) return false;
      if (PayloadCase != other.PayloadCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (payloadCase_ == PayloadOneofCase.Success) hash ^= Success.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.Info) hash ^= Info.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.Update) hash ^= Update.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.End) hash ^= End.GetHashCode();
      hash ^= (int) payloadCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (payloadCase_ == PayloadOneofCase.Success) {
        output.WriteRawTag(10);
        output.WriteString(Success);
      }
      if (payloadCase_ == PayloadOneofCase.Info) {
        output.WriteRawTag(18);
        output.WriteString(Info);
      }
      if (payloadCase_ == PayloadOneofCase.Update) {
        output.WriteRawTag(26);
        output.WriteMessage(Update);
      }
      if (payloadCase_ == PayloadOneofCase.End) {
        output.WriteRawTag(32);
        output.WriteUInt32(End);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (payloadCase_ == PayloadOneofCase.Success) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Success);
      }
      if (payloadCase_ == PayloadOneofCase.Info) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Info);
      }
      if (payloadCase_ == PayloadOneofCase.Update) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Update);
      }
      if (payloadCase_ == PayloadOneofCase.End) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(End);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Progress other) {
      if (other == null) {
        return;
      }
      switch (other.PayloadCase) {
        case PayloadOneofCase.Success:
          Success = other.Success;
          break;
        case PayloadOneofCase.Info:
          Info = other.Info;
          break;
        case PayloadOneofCase.Update:
          if (Update == null) {
            Update = new global::Trail.Cli.Service.Cli.V1.Progress.Types.Update();
          }
          Update.MergeFrom(other.Update);
          break;
        case PayloadOneofCase.End:
          End = other.End;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Success = input.ReadString();
            break;
          }
          case 18: {
            Info = input.ReadString();
            break;
          }
          case 26: {
            global::Trail.Cli.Service.Cli.V1.Progress.Types.Update subBuilder = new global::Trail.Cli.Service.Cli.V1.Progress.Types.Update();
            if (payloadCase_ == PayloadOneofCase.Update) {
              subBuilder.MergeFrom(Update);
            }
            input.ReadMessage(subBuilder);
            Update = subBuilder;
            break;
          }
          case 32: {
            End = input.ReadUInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the Progress message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class Update : pb::IMessage<Update> {
        private static readonly pb::MessageParser<Update> _parser = new pb::MessageParser<Update>(() => new Update());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Update> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Trail.Cli.Service.Cli.V1.Progress.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Update() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Update(Update other) : this() {
          id_ = other.id_;
          progress_ = other.progress_;
          title_ = other.title_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Update Clone() {
          return new Update(this);
        }

        /// <summary>Field number for the "id" field.</summary>
        public const int IdFieldNumber = 1;
        private uint id_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public uint Id {
          get { return id_; }
          set {
            id_ = value;
          }
        }

        /// <summary>Field number for the "progress" field.</summary>
        public const int ProgressFieldNumber = 2;
        private float progress_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public float Progress {
          get { return progress_; }
          set {
            progress_ = value;
          }
        }

        /// <summary>Field number for the "title" field.</summary>
        public const int TitleFieldNumber = 3;
        private string title_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Title {
          get { return title_; }
          set {
            title_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Update);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Update other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Id != other.Id) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Progress, other.Progress)) return false;
          if (Title != other.Title) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Id != 0) hash ^= Id.GetHashCode();
          if (Progress != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Progress);
          if (Title.Length != 0) hash ^= Title.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Id != 0) {
            output.WriteRawTag(8);
            output.WriteUInt32(Id);
          }
          if (Progress != 0F) {
            output.WriteRawTag(21);
            output.WriteFloat(Progress);
          }
          if (Title.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(Title);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Id != 0) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Id);
          }
          if (Progress != 0F) {
            size += 1 + 4;
          }
          if (Title.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Title);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Update other) {
          if (other == null) {
            return;
          }
          if (other.Id != 0) {
            Id = other.Id;
          }
          if (other.Progress != 0F) {
            Progress = other.Progress;
          }
          if (other.Title.Length != 0) {
            Title = other.Title;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                Id = input.ReadUInt32();
                break;
              }
              case 21: {
                Progress = input.ReadFloat();
                break;
              }
              case 26: {
                Title = input.ReadString();
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  public sealed partial class GetLoginStatusReq : pb::IMessage<GetLoginStatusReq> {
    private static readonly pb::MessageParser<GetLoginStatusReq> _parser = new pb::MessageParser<GetLoginStatusReq>(() => new GetLoginStatusReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetLoginStatusReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Trail.Cli.Service.Cli.V1.CliReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetLoginStatusReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetLoginStatusReq(GetLoginStatusReq other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetLoginStatusReq Clone() {
      return new GetLoginStatusReq(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetLoginStatusReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetLoginStatusReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetLoginStatusReq other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class GetLoginStatusRes : pb::IMessage<GetLoginStatusRes> {
    private static readonly pb::MessageParser<GetLoginStatusRes> _parser = new pb::MessageParser<GetLoginStatusRes>(() => new GetLoginStatusRes());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetLoginStatusRes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Trail.Cli.Service.Cli.V1.CliReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetLoginStatusRes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetLoginStatusRes(GetLoginStatusRes other) : this() {
      switch (other.ResCase) {
        case ResOneofCase.Payload:
          Payload = other.Payload.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetLoginStatusRes Clone() {
      return new GetLoginStatusRes(this);
    }

    /// <summary>Field number for the "payload" field.</summary>
    public const int PayloadFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Trail.Cli.Service.Cli.V1.GetLoginStatusRes.Types.Payload Payload {
      get { return resCase_ == ResOneofCase.Payload ? (global::Trail.Cli.Service.Cli.V1.GetLoginStatusRes.Types.Payload) res_ : null; }
      set {
        res_ = value;
        resCase_ = value == null ? ResOneofCase.None : ResOneofCase.Payload;
      }
    }

    private object res_;
    /// <summary>Enum of possible cases for the "res" oneof.</summary>
    public enum ResOneofCase {
      None = 0,
      Payload = 1,
    }
    private ResOneofCase resCase_ = ResOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResOneofCase ResCase {
      get { return resCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearRes() {
      resCase_ = ResOneofCase.None;
      res_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetLoginStatusRes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetLoginStatusRes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Payload, other.Payload)) return false;
      if (ResCase != other.ResCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (resCase_ == ResOneofCase.Payload) hash ^= Payload.GetHashCode();
      hash ^= (int) resCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (resCase_ == ResOneofCase.Payload) {
        output.WriteRawTag(10);
        output.WriteMessage(Payload);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (resCase_ == ResOneofCase.Payload) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Payload);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetLoginStatusRes other) {
      if (other == null) {
        return;
      }
      switch (other.ResCase) {
        case ResOneofCase.Payload:
          if (Payload == null) {
            Payload = new global::Trail.Cli.Service.Cli.V1.GetLoginStatusRes.Types.Payload();
          }
          Payload.MergeFrom(other.Payload);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::Trail.Cli.Service.Cli.V1.GetLoginStatusRes.Types.Payload subBuilder = new global::Trail.Cli.Service.Cli.V1.GetLoginStatusRes.Types.Payload();
            if (resCase_ == ResOneofCase.Payload) {
              subBuilder.MergeFrom(Payload);
            }
            input.ReadMessage(subBuilder);
            Payload = subBuilder;
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the GetLoginStatusRes message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class Payload : pb::IMessage<Payload> {
        private static readonly pb::MessageParser<Payload> _parser = new pb::MessageParser<Payload>(() => new Payload());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Payload> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Trail.Cli.Service.Cli.V1.GetLoginStatusRes.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Payload() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Payload(Payload other) : this() {
          isLoggedIn_ = other.isLoggedIn_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Payload Clone() {
          return new Payload(this);
        }

        /// <summary>Field number for the "is_logged_in" field.</summary>
        public const int IsLoggedInFieldNumber = 1;
        private bool isLoggedIn_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool IsLoggedIn {
          get { return isLoggedIn_; }
          set {
            isLoggedIn_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Payload);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Payload other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (IsLoggedIn != other.IsLoggedIn) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (IsLoggedIn != false) hash ^= IsLoggedIn.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (IsLoggedIn != false) {
            output.WriteRawTag(8);
            output.WriteBool(IsLoggedIn);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (IsLoggedIn != false) {
            size += 1 + 1;
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Payload other) {
          if (other == null) {
            return;
          }
          if (other.IsLoggedIn != false) {
            IsLoggedIn = other.IsLoggedIn;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                IsLoggedIn = input.ReadBool();
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  public sealed partial class LogInReq : pb::IMessage<LogInReq> {
    private static readonly pb::MessageParser<LogInReq> _parser = new pb::MessageParser<LogInReq>(() => new LogInReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LogInReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Trail.Cli.Service.Cli.V1.CliReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LogInReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LogInReq(LogInReq other) : this() {
      email_ = other.email_;
      password_ = other.password_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LogInReq Clone() {
      return new LogInReq(this);
    }

    /// <summary>Field number for the "email" field.</summary>
    public const int EmailFieldNumber = 1;
    private string email_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Email {
      get { return email_; }
      set {
        email_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "password" field.</summary>
    public const int PasswordFieldNumber = 2;
    private string password_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Password {
      get { return password_; }
      set {
        password_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LogInReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LogInReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Email != other.Email) return false;
      if (Password != other.Password) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Email.Length != 0) hash ^= Email.GetHashCode();
      if (Password.Length != 0) hash ^= Password.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Email.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Email);
      }
      if (Password.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Password);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Email.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Email);
      }
      if (Password.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Password);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LogInReq other) {
      if (other == null) {
        return;
      }
      if (other.Email.Length != 0) {
        Email = other.Email;
      }
      if (other.Password.Length != 0) {
        Password = other.Password;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Email = input.ReadString();
            break;
          }
          case 18: {
            Password = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class LogInRes : pb::IMessage<LogInRes> {
    private static readonly pb::MessageParser<LogInRes> _parser = new pb::MessageParser<LogInRes>(() => new LogInRes());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LogInRes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Trail.Cli.Service.Cli.V1.CliReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LogInRes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LogInRes(LogInRes other) : this() {
      switch (other.ResCase) {
        case ResOneofCase.Payload:
          Payload = other.Payload.Clone();
          break;
        case ResOneofCase.Error:
          Error = other.Error.Clone();
          break;
        case ResOneofCase.InvalidCredentialsError:
          InvalidCredentialsError = other.InvalidCredentialsError.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LogInRes Clone() {
      return new LogInRes(this);
    }

    /// <summary>Field number for the "payload" field.</summary>
    public const int PayloadFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Trail.Cli.Service.Cli.V1.LogInRes.Types.Payload Payload {
      get { return resCase_ == ResOneofCase.Payload ? (global::Trail.Cli.Service.Cli.V1.LogInRes.Types.Payload) res_ : null; }
      set {
        res_ = value;
        resCase_ = value == null ? ResOneofCase.None : ResOneofCase.Payload;
      }
    }

    /// <summary>Field number for the "error" field.</summary>
    public const int ErrorFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Trail.Cli.Service.Cli.V1.LogInRes.Types.Error Error {
      get { return resCase_ == ResOneofCase.Error ? (global::Trail.Cli.Service.Cli.V1.LogInRes.Types.Error) res_ : null; }
      set {
        res_ = value;
        resCase_ = value == null ? ResOneofCase.None : ResOneofCase.Error;
      }
    }

    /// <summary>Field number for the "invalid_credentials_error" field.</summary>
    public const int InvalidCredentialsErrorFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Trail.Cli.Service.Cli.V1.LogInRes.Types.InvalidCredentialsError InvalidCredentialsError {
      get { return resCase_ == ResOneofCase.InvalidCredentialsError ? (global::Trail.Cli.Service.Cli.V1.LogInRes.Types.InvalidCredentialsError) res_ : null; }
      set {
        res_ = value;
        resCase_ = value == null ? ResOneofCase.None : ResOneofCase.InvalidCredentialsError;
      }
    }

    private object res_;
    /// <summary>Enum of possible cases for the "res" oneof.</summary>
    public enum ResOneofCase {
      None = 0,
      Payload = 1,
      Error = 2,
      InvalidCredentialsError = 3,
    }
    private ResOneofCase resCase_ = ResOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResOneofCase ResCase {
      get { return resCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearRes() {
      resCase_ = ResOneofCase.None;
      res_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LogInRes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LogInRes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Payload, other.Payload)) return false;
      if (!object.Equals(Error, other.Error)) return false;
      if (!object.Equals(InvalidCredentialsError, other.InvalidCredentialsError)) return false;
      if (ResCase != other.ResCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (resCase_ == ResOneofCase.Payload) hash ^= Payload.GetHashCode();
      if (resCase_ == ResOneofCase.Error) hash ^= Error.GetHashCode();
      if (resCase_ == ResOneofCase.InvalidCredentialsError) hash ^= InvalidCredentialsError.GetHashCode();
      hash ^= (int) resCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (resCase_ == ResOneofCase.Payload) {
        output.WriteRawTag(10);
        output.WriteMessage(Payload);
      }
      if (resCase_ == ResOneofCase.Error) {
        output.WriteRawTag(18);
        output.WriteMessage(Error);
      }
      if (resCase_ == ResOneofCase.InvalidCredentialsError) {
        output.WriteRawTag(26);
        output.WriteMessage(InvalidCredentialsError);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (resCase_ == ResOneofCase.Payload) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Payload);
      }
      if (resCase_ == ResOneofCase.Error) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Error);
      }
      if (resCase_ == ResOneofCase.InvalidCredentialsError) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(InvalidCredentialsError);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LogInRes other) {
      if (other == null) {
        return;
      }
      switch (other.ResCase) {
        case ResOneofCase.Payload:
          if (Payload == null) {
            Payload = new global::Trail.Cli.Service.Cli.V1.LogInRes.Types.Payload();
          }
          Payload.MergeFrom(other.Payload);
          break;
        case ResOneofCase.Error:
          if (Error == null) {
            Error = new global::Trail.Cli.Service.Cli.V1.LogInRes.Types.Error();
          }
          Error.MergeFrom(other.Error);
          break;
        case ResOneofCase.InvalidCredentialsError:
          if (InvalidCredentialsError == null) {
            InvalidCredentialsError = new global::Trail.Cli.Service.Cli.V1.LogInRes.Types.InvalidCredentialsError();
          }
          InvalidCredentialsError.MergeFrom(other.InvalidCredentialsError);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::Trail.Cli.Service.Cli.V1.LogInRes.Types.Payload subBuilder = new global::Trail.Cli.Service.Cli.V1.LogInRes.Types.Payload();
            if (resCase_ == ResOneofCase.Payload) {
              subBuilder.MergeFrom(Payload);
            }
            input.ReadMessage(subBuilder);
            Payload = subBuilder;
            break;
          }
          case 18: {
            global::Trail.Cli.Service.Cli.V1.LogInRes.Types.Error subBuilder = new global::Trail.Cli.Service.Cli.V1.LogInRes.Types.Error();
            if (resCase_ == ResOneofCase.Error) {
              subBuilder.MergeFrom(Error);
            }
            input.ReadMessage(subBuilder);
            Error = subBuilder;
            break;
          }
          case 26: {
            global::Trail.Cli.Service.Cli.V1.LogInRes.Types.InvalidCredentialsError subBuilder = new global::Trail.Cli.Service.Cli.V1.LogInRes.Types.InvalidCredentialsError();
            if (resCase_ == ResOneofCase.InvalidCredentialsError) {
              subBuilder.MergeFrom(InvalidCredentialsError);
            }
            input.ReadMessage(subBuilder);
            InvalidCredentialsError = subBuilder;
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the LogInRes message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class Payload : pb::IMessage<Payload> {
        private static readonly pb::MessageParser<Payload> _parser = new pb::MessageParser<Payload>(() => new Payload());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Payload> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Trail.Cli.Service.Cli.V1.LogInRes.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Payload() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Payload(Payload other) : this() {
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Payload Clone() {
          return new Payload(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Payload);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Payload other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Payload other) {
          if (other == null) {
            return;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
            }
          }
        }

      }

      public sealed partial class Error : pb::IMessage<Error> {
        private static readonly pb::MessageParser<Error> _parser = new pb::MessageParser<Error>(() => new Error());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Error> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Trail.Cli.Service.Cli.V1.LogInRes.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Error() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Error(Error other) : this() {
          message_ = other.message_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Error Clone() {
          return new Error(this);
        }

        /// <summary>Field number for the "message" field.</summary>
        public const int MessageFieldNumber = 1;
        private string message_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Message {
          get { return message_; }
          set {
            message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Error);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Error other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Message != other.Message) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Message.Length != 0) hash ^= Message.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Message.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Message);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Message.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Error other) {
          if (other == null) {
            return;
          }
          if (other.Message.Length != 0) {
            Message = other.Message;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Message = input.ReadString();
                break;
              }
            }
          }
        }

      }

      public sealed partial class InvalidCredentialsError : pb::IMessage<InvalidCredentialsError> {
        private static readonly pb::MessageParser<InvalidCredentialsError> _parser = new pb::MessageParser<InvalidCredentialsError>(() => new InvalidCredentialsError());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<InvalidCredentialsError> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Trail.Cli.Service.Cli.V1.LogInRes.Descriptor.NestedTypes[2]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public InvalidCredentialsError() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public InvalidCredentialsError(InvalidCredentialsError other) : this() {
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public InvalidCredentialsError Clone() {
          return new InvalidCredentialsError(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as InvalidCredentialsError);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(InvalidCredentialsError other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(InvalidCredentialsError other) {
          if (other == null) {
            return;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
            }
          }
        }

      }

    }
    #endregion

  }

  public sealed partial class LogOutReq : pb::IMessage<LogOutReq> {
    private static readonly pb::MessageParser<LogOutReq> _parser = new pb::MessageParser<LogOutReq>(() => new LogOutReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LogOutReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Trail.Cli.Service.Cli.V1.CliReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LogOutReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LogOutReq(LogOutReq other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LogOutReq Clone() {
      return new LogOutReq(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LogOutReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LogOutReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LogOutReq other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class LogOutRes : pb::IMessage<LogOutRes> {
    private static readonly pb::MessageParser<LogOutRes> _parser = new pb::MessageParser<LogOutRes>(() => new LogOutRes());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LogOutRes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Trail.Cli.Service.Cli.V1.CliReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LogOutRes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LogOutRes(LogOutRes other) : this() {
      switch (other.ResCase) {
        case ResOneofCase.Payload:
          Payload = other.Payload.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LogOutRes Clone() {
      return new LogOutRes(this);
    }

    /// <summary>Field number for the "payload" field.</summary>
    public const int PayloadFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Trail.Cli.Service.Cli.V1.LogOutRes.Types.Payload Payload {
      get { return resCase_ == ResOneofCase.Payload ? (global::Trail.Cli.Service.Cli.V1.LogOutRes.Types.Payload) res_ : null; }
      set {
        res_ = value;
        resCase_ = value == null ? ResOneofCase.None : ResOneofCase.Payload;
      }
    }

    private object res_;
    /// <summary>Enum of possible cases for the "res" oneof.</summary>
    public enum ResOneofCase {
      None = 0,
      Payload = 1,
    }
    private ResOneofCase resCase_ = ResOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResOneofCase ResCase {
      get { return resCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearRes() {
      resCase_ = ResOneofCase.None;
      res_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LogOutRes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LogOutRes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Payload, other.Payload)) return false;
      if (ResCase != other.ResCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (resCase_ == ResOneofCase.Payload) hash ^= Payload.GetHashCode();
      hash ^= (int) resCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (resCase_ == ResOneofCase.Payload) {
        output.WriteRawTag(10);
        output.WriteMessage(Payload);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (resCase_ == ResOneofCase.Payload) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Payload);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LogOutRes other) {
      if (other == null) {
        return;
      }
      switch (other.ResCase) {
        case ResOneofCase.Payload:
          if (Payload == null) {
            Payload = new global::Trail.Cli.Service.Cli.V1.LogOutRes.Types.Payload();
          }
          Payload.MergeFrom(other.Payload);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::Trail.Cli.Service.Cli.V1.LogOutRes.Types.Payload subBuilder = new global::Trail.Cli.Service.Cli.V1.LogOutRes.Types.Payload();
            if (resCase_ == ResOneofCase.Payload) {
              subBuilder.MergeFrom(Payload);
            }
            input.ReadMessage(subBuilder);
            Payload = subBuilder;
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the LogOutRes message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class Payload : pb::IMessage<Payload> {
        private static readonly pb::MessageParser<Payload> _parser = new pb::MessageParser<Payload>(() => new Payload());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Payload> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Trail.Cli.Service.Cli.V1.LogOutRes.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Payload() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Payload(Payload other) : this() {
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Payload Clone() {
          return new Payload(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Payload);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Payload other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Payload other) {
          if (other == null) {
            return;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
            }
          }
        }

      }

    }
    #endregion

  }

  public sealed partial class ListGamesReq : pb::IMessage<ListGamesReq> {
    private static readonly pb::MessageParser<ListGamesReq> _parser = new pb::MessageParser<ListGamesReq>(() => new ListGamesReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListGamesReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Trail.Cli.Service.Cli.V1.CliReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListGamesReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListGamesReq(ListGamesReq other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListGamesReq Clone() {
      return new ListGamesReq(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListGamesReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListGamesReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListGamesReq other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class ListGamesRes : pb::IMessage<ListGamesRes> {
    private static readonly pb::MessageParser<ListGamesRes> _parser = new pb::MessageParser<ListGamesRes>(() => new ListGamesRes());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListGamesRes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Trail.Cli.Service.Cli.V1.CliReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListGamesRes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListGamesRes(ListGamesRes other) : this() {
      switch (other.ResCase) {
        case ResOneofCase.Payload:
          Payload = other.Payload.Clone();
          break;
        case ResOneofCase.Error:
          Error = other.Error.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListGamesRes Clone() {
      return new ListGamesRes(this);
    }

    /// <summary>Field number for the "payload" field.</summary>
    public const int PayloadFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Trail.Cli.Service.Cli.V1.ListGamesRes.Types.Payload Payload {
      get { return resCase_ == ResOneofCase.Payload ? (global::Trail.Cli.Service.Cli.V1.ListGamesRes.Types.Payload) res_ : null; }
      set {
        res_ = value;
        resCase_ = value == null ? ResOneofCase.None : ResOneofCase.Payload;
      }
    }

    /// <summary>Field number for the "error" field.</summary>
    public const int ErrorFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Trail.Cli.Service.Cli.V1.ListGamesRes.Types.Error Error {
      get { return resCase_ == ResOneofCase.Error ? (global::Trail.Cli.Service.Cli.V1.ListGamesRes.Types.Error) res_ : null; }
      set {
        res_ = value;
        resCase_ = value == null ? ResOneofCase.None : ResOneofCase.Error;
      }
    }

    private object res_;
    /// <summary>Enum of possible cases for the "res" oneof.</summary>
    public enum ResOneofCase {
      None = 0,
      Payload = 1,
      Error = 2,
    }
    private ResOneofCase resCase_ = ResOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResOneofCase ResCase {
      get { return resCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearRes() {
      resCase_ = ResOneofCase.None;
      res_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListGamesRes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListGamesRes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Payload, other.Payload)) return false;
      if (!object.Equals(Error, other.Error)) return false;
      if (ResCase != other.ResCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (resCase_ == ResOneofCase.Payload) hash ^= Payload.GetHashCode();
      if (resCase_ == ResOneofCase.Error) hash ^= Error.GetHashCode();
      hash ^= (int) resCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (resCase_ == ResOneofCase.Payload) {
        output.WriteRawTag(10);
        output.WriteMessage(Payload);
      }
      if (resCase_ == ResOneofCase.Error) {
        output.WriteRawTag(18);
        output.WriteMessage(Error);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (resCase_ == ResOneofCase.Payload) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Payload);
      }
      if (resCase_ == ResOneofCase.Error) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Error);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListGamesRes other) {
      if (other == null) {
        return;
      }
      switch (other.ResCase) {
        case ResOneofCase.Payload:
          if (Payload == null) {
            Payload = new global::Trail.Cli.Service.Cli.V1.ListGamesRes.Types.Payload();
          }
          Payload.MergeFrom(other.Payload);
          break;
        case ResOneofCase.Error:
          if (Error == null) {
            Error = new global::Trail.Cli.Service.Cli.V1.ListGamesRes.Types.Error();
          }
          Error.MergeFrom(other.Error);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::Trail.Cli.Service.Cli.V1.ListGamesRes.Types.Payload subBuilder = new global::Trail.Cli.Service.Cli.V1.ListGamesRes.Types.Payload();
            if (resCase_ == ResOneofCase.Payload) {
              subBuilder.MergeFrom(Payload);
            }
            input.ReadMessage(subBuilder);
            Payload = subBuilder;
            break;
          }
          case 18: {
            global::Trail.Cli.Service.Cli.V1.ListGamesRes.Types.Error subBuilder = new global::Trail.Cli.Service.Cli.V1.ListGamesRes.Types.Error();
            if (resCase_ == ResOneofCase.Error) {
              subBuilder.MergeFrom(Error);
            }
            input.ReadMessage(subBuilder);
            Error = subBuilder;
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the ListGamesRes message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class Payload : pb::IMessage<Payload> {
        private static readonly pb::MessageParser<Payload> _parser = new pb::MessageParser<Payload>(() => new Payload());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Payload> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Trail.Cli.Service.Cli.V1.ListGamesRes.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Payload() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Payload(Payload other) : this() {
          games_ = other.games_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Payload Clone() {
          return new Payload(this);
        }

        /// <summary>Field number for the "games" field.</summary>
        public const int GamesFieldNumber = 1;
        private static readonly pb::FieldCodec<global::Trail.Cli.Service.Cli.V1.ListGamesRes.Types.Payload.Types.Game> _repeated_games_codec
            = pb::FieldCodec.ForMessage(10, global::Trail.Cli.Service.Cli.V1.ListGamesRes.Types.Payload.Types.Game.Parser);
        private readonly pbc::RepeatedField<global::Trail.Cli.Service.Cli.V1.ListGamesRes.Types.Payload.Types.Game> games_ = new pbc::RepeatedField<global::Trail.Cli.Service.Cli.V1.ListGamesRes.Types.Payload.Types.Game>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::Trail.Cli.Service.Cli.V1.ListGamesRes.Types.Payload.Types.Game> Games {
          get { return games_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Payload);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Payload other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if(!games_.Equals(other.games_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          hash ^= games_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          games_.WriteTo(output, _repeated_games_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          size += games_.CalculateSize(_repeated_games_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Payload other) {
          if (other == null) {
            return;
          }
          games_.Add(other.games_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                games_.AddEntriesFrom(input, _repeated_games_codec);
                break;
              }
            }
          }
        }

        #region Nested types
        /// <summary>Container for nested types declared in the Payload message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static partial class Types {
          public sealed partial class Game : pb::IMessage<Game> {
            private static readonly pb::MessageParser<Game> _parser = new pb::MessageParser<Game>(() => new Game());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<Game> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::Trail.Cli.Service.Cli.V1.ListGamesRes.Types.Payload.Descriptor.NestedTypes[0]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public Game() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public Game(Game other) : this() {
              gameId_ = other.gameId_;
              title_ = other.title_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public Game Clone() {
              return new Game(this);
            }

            /// <summary>Field number for the "game_id" field.</summary>
            public const int GameIdFieldNumber = 1;
            private string gameId_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string GameId {
              get { return gameId_; }
              set {
                gameId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "title" field.</summary>
            public const int TitleFieldNumber = 2;
            private string title_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string Title {
              get { return title_; }
              set {
                title_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as Game);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(Game other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (GameId != other.GameId) return false;
              if (Title != other.Title) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (GameId.Length != 0) hash ^= GameId.GetHashCode();
              if (Title.Length != 0) hash ^= Title.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
              if (GameId.Length != 0) {
                output.WriteRawTag(10);
                output.WriteString(GameId);
              }
              if (Title.Length != 0) {
                output.WriteRawTag(18);
                output.WriteString(Title);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (GameId.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(GameId);
              }
              if (Title.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Title);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(Game other) {
              if (other == null) {
                return;
              }
              if (other.GameId.Length != 0) {
                GameId = other.GameId;
              }
              if (other.Title.Length != 0) {
                Title = other.Title;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    GameId = input.ReadString();
                    break;
                  }
                  case 18: {
                    Title = input.ReadString();
                    break;
                  }
                }
              }
            }

          }

        }
        #endregion

      }

      public sealed partial class Error : pb::IMessage<Error> {
        private static readonly pb::MessageParser<Error> _parser = new pb::MessageParser<Error>(() => new Error());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Error> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Trail.Cli.Service.Cli.V1.ListGamesRes.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Error() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Error(Error other) : this() {
          message_ = other.message_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Error Clone() {
          return new Error(this);
        }

        /// <summary>Field number for the "message" field.</summary>
        public const int MessageFieldNumber = 1;
        private string message_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Message {
          get { return message_; }
          set {
            message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Error);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Error other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Message != other.Message) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Message.Length != 0) hash ^= Message.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Message.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Message);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Message.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Error other) {
          if (other == null) {
            return;
          }
          if (other.Message.Length != 0) {
            Message = other.Message;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Message = input.ReadString();
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  public sealed partial class InitializeGameReq : pb::IMessage<InitializeGameReq> {
    private static readonly pb::MessageParser<InitializeGameReq> _parser = new pb::MessageParser<InitializeGameReq>(() => new InitializeGameReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<InitializeGameReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Trail.Cli.Service.Cli.V1.CliReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InitializeGameReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InitializeGameReq(InitializeGameReq other) : this() {
      path_ = other.path_;
      gameId_ = other.gameId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InitializeGameReq Clone() {
      return new InitializeGameReq(this);
    }

    /// <summary>Field number for the "path" field.</summary>
    public const int PathFieldNumber = 1;
    private string path_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Path {
      get { return path_; }
      set {
        path_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "game_id" field.</summary>
    public const int GameIdFieldNumber = 2;
    private string gameId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GameId {
      get { return gameId_; }
      set {
        gameId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as InitializeGameReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(InitializeGameReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Path != other.Path) return false;
      if (GameId != other.GameId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Path.Length != 0) hash ^= Path.GetHashCode();
      if (GameId.Length != 0) hash ^= GameId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Path.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Path);
      }
      if (GameId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(GameId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Path.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Path);
      }
      if (GameId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GameId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(InitializeGameReq other) {
      if (other == null) {
        return;
      }
      if (other.Path.Length != 0) {
        Path = other.Path;
      }
      if (other.GameId.Length != 0) {
        GameId = other.GameId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Path = input.ReadString();
            break;
          }
          case 18: {
            GameId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class InitializeGameRes : pb::IMessage<InitializeGameRes> {
    private static readonly pb::MessageParser<InitializeGameRes> _parser = new pb::MessageParser<InitializeGameRes>(() => new InitializeGameRes());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<InitializeGameRes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Trail.Cli.Service.Cli.V1.CliReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InitializeGameRes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InitializeGameRes(InitializeGameRes other) : this() {
      switch (other.ResCase) {
        case ResOneofCase.Payload:
          Payload = other.Payload.Clone();
          break;
        case ResOneofCase.Error:
          Error = other.Error.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InitializeGameRes Clone() {
      return new InitializeGameRes(this);
    }

    /// <summary>Field number for the "payload" field.</summary>
    public const int PayloadFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Trail.Cli.Service.Cli.V1.InitializeGameRes.Types.Payload Payload {
      get { return resCase_ == ResOneofCase.Payload ? (global::Trail.Cli.Service.Cli.V1.InitializeGameRes.Types.Payload) res_ : null; }
      set {
        res_ = value;
        resCase_ = value == null ? ResOneofCase.None : ResOneofCase.Payload;
      }
    }

    /// <summary>Field number for the "error" field.</summary>
    public const int ErrorFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Trail.Cli.Service.Cli.V1.InitializeGameRes.Types.Error Error {
      get { return resCase_ == ResOneofCase.Error ? (global::Trail.Cli.Service.Cli.V1.InitializeGameRes.Types.Error) res_ : null; }
      set {
        res_ = value;
        resCase_ = value == null ? ResOneofCase.None : ResOneofCase.Error;
      }
    }

    private object res_;
    /// <summary>Enum of possible cases for the "res" oneof.</summary>
    public enum ResOneofCase {
      None = 0,
      Payload = 1,
      Error = 2,
    }
    private ResOneofCase resCase_ = ResOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResOneofCase ResCase {
      get { return resCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearRes() {
      resCase_ = ResOneofCase.None;
      res_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as InitializeGameRes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(InitializeGameRes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Payload, other.Payload)) return false;
      if (!object.Equals(Error, other.Error)) return false;
      if (ResCase != other.ResCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (resCase_ == ResOneofCase.Payload) hash ^= Payload.GetHashCode();
      if (resCase_ == ResOneofCase.Error) hash ^= Error.GetHashCode();
      hash ^= (int) resCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (resCase_ == ResOneofCase.Payload) {
        output.WriteRawTag(10);
        output.WriteMessage(Payload);
      }
      if (resCase_ == ResOneofCase.Error) {
        output.WriteRawTag(18);
        output.WriteMessage(Error);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (resCase_ == ResOneofCase.Payload) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Payload);
      }
      if (resCase_ == ResOneofCase.Error) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Error);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(InitializeGameRes other) {
      if (other == null) {
        return;
      }
      switch (other.ResCase) {
        case ResOneofCase.Payload:
          if (Payload == null) {
            Payload = new global::Trail.Cli.Service.Cli.V1.InitializeGameRes.Types.Payload();
          }
          Payload.MergeFrom(other.Payload);
          break;
        case ResOneofCase.Error:
          if (Error == null) {
            Error = new global::Trail.Cli.Service.Cli.V1.InitializeGameRes.Types.Error();
          }
          Error.MergeFrom(other.Error);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::Trail.Cli.Service.Cli.V1.InitializeGameRes.Types.Payload subBuilder = new global::Trail.Cli.Service.Cli.V1.InitializeGameRes.Types.Payload();
            if (resCase_ == ResOneofCase.Payload) {
              subBuilder.MergeFrom(Payload);
            }
            input.ReadMessage(subBuilder);
            Payload = subBuilder;
            break;
          }
          case 18: {
            global::Trail.Cli.Service.Cli.V1.InitializeGameRes.Types.Error subBuilder = new global::Trail.Cli.Service.Cli.V1.InitializeGameRes.Types.Error();
            if (resCase_ == ResOneofCase.Error) {
              subBuilder.MergeFrom(Error);
            }
            input.ReadMessage(subBuilder);
            Error = subBuilder;
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the InitializeGameRes message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class Payload : pb::IMessage<Payload> {
        private static readonly pb::MessageParser<Payload> _parser = new pb::MessageParser<Payload>(() => new Payload());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Payload> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Trail.Cli.Service.Cli.V1.InitializeGameRes.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Payload() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Payload(Payload other) : this() {
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Payload Clone() {
          return new Payload(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Payload);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Payload other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Payload other) {
          if (other == null) {
            return;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
            }
          }
        }

      }

      public sealed partial class Error : pb::IMessage<Error> {
        private static readonly pb::MessageParser<Error> _parser = new pb::MessageParser<Error>(() => new Error());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Error> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Trail.Cli.Service.Cli.V1.InitializeGameRes.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Error() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Error(Error other) : this() {
          message_ = other.message_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Error Clone() {
          return new Error(this);
        }

        /// <summary>Field number for the "message" field.</summary>
        public const int MessageFieldNumber = 1;
        private string message_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Message {
          get { return message_; }
          set {
            message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Error);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Error other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Message != other.Message) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Message.Length != 0) hash ^= Message.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Message.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Message);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Message.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Error other) {
          if (other == null) {
            return;
          }
          if (other.Message.Length != 0) {
            Message = other.Message;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Message = input.ReadString();
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  public sealed partial class UploadBuildReq : pb::IMessage<UploadBuildReq> {
    private static readonly pb::MessageParser<UploadBuildReq> _parser = new pb::MessageParser<UploadBuildReq>(() => new UploadBuildReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UploadBuildReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Trail.Cli.Service.Cli.V1.CliReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UploadBuildReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UploadBuildReq(UploadBuildReq other) : this() {
      buildPath_ = other.buildPath_;
      projectPath_ = other.projectPath_;
      pushChannel_ = other.pushChannel_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UploadBuildReq Clone() {
      return new UploadBuildReq(this);
    }

    /// <summary>Field number for the "build_path" field.</summary>
    public const int BuildPathFieldNumber = 1;
    private string buildPath_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BuildPath {
      get { return buildPath_; }
      set {
        buildPath_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "project_path" field.</summary>
    public const int ProjectPathFieldNumber = 2;
    private string projectPath_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProjectPath {
      get { return projectPath_; }
      set {
        projectPath_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "push_channel" field.</summary>
    public const int PushChannelFieldNumber = 3;
    private string pushChannel_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PushChannel {
      get { return pushChannel_; }
      set {
        pushChannel_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UploadBuildReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UploadBuildReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BuildPath != other.BuildPath) return false;
      if (ProjectPath != other.ProjectPath) return false;
      if (PushChannel != other.PushChannel) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (BuildPath.Length != 0) hash ^= BuildPath.GetHashCode();
      if (ProjectPath.Length != 0) hash ^= ProjectPath.GetHashCode();
      if (PushChannel.Length != 0) hash ^= PushChannel.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (BuildPath.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(BuildPath);
      }
      if (ProjectPath.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ProjectPath);
      }
      if (PushChannel.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(PushChannel);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (BuildPath.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BuildPath);
      }
      if (ProjectPath.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProjectPath);
      }
      if (PushChannel.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PushChannel);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UploadBuildReq other) {
      if (other == null) {
        return;
      }
      if (other.BuildPath.Length != 0) {
        BuildPath = other.BuildPath;
      }
      if (other.ProjectPath.Length != 0) {
        ProjectPath = other.ProjectPath;
      }
      if (other.PushChannel.Length != 0) {
        PushChannel = other.PushChannel;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            BuildPath = input.ReadString();
            break;
          }
          case 18: {
            ProjectPath = input.ReadString();
            break;
          }
          case 26: {
            PushChannel = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class UploadBuildRes : pb::IMessage<UploadBuildRes> {
    private static readonly pb::MessageParser<UploadBuildRes> _parser = new pb::MessageParser<UploadBuildRes>(() => new UploadBuildRes());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UploadBuildRes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Trail.Cli.Service.Cli.V1.CliReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UploadBuildRes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UploadBuildRes(UploadBuildRes other) : this() {
      switch (other.ResCase) {
        case ResOneofCase.Payload:
          Payload = other.Payload.Clone();
          break;
        case ResOneofCase.Progress:
          Progress = other.Progress.Clone();
          break;
        case ResOneofCase.Error:
          Error = other.Error.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UploadBuildRes Clone() {
      return new UploadBuildRes(this);
    }

    /// <summary>Field number for the "payload" field.</summary>
    public const int PayloadFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Trail.Cli.Service.Cli.V1.UploadBuildRes.Types.Payload Payload {
      get { return resCase_ == ResOneofCase.Payload ? (global::Trail.Cli.Service.Cli.V1.UploadBuildRes.Types.Payload) res_ : null; }
      set {
        res_ = value;
        resCase_ = value == null ? ResOneofCase.None : ResOneofCase.Payload;
      }
    }

    /// <summary>Field number for the "progress" field.</summary>
    public const int ProgressFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Trail.Cli.Service.Cli.V1.Progress Progress {
      get { return resCase_ == ResOneofCase.Progress ? (global::Trail.Cli.Service.Cli.V1.Progress) res_ : null; }
      set {
        res_ = value;
        resCase_ = value == null ? ResOneofCase.None : ResOneofCase.Progress;
      }
    }

    /// <summary>Field number for the "error" field.</summary>
    public const int ErrorFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Trail.Cli.Service.Cli.V1.UploadBuildRes.Types.Error Error {
      get { return resCase_ == ResOneofCase.Error ? (global::Trail.Cli.Service.Cli.V1.UploadBuildRes.Types.Error) res_ : null; }
      set {
        res_ = value;
        resCase_ = value == null ? ResOneofCase.None : ResOneofCase.Error;
      }
    }

    private object res_;
    /// <summary>Enum of possible cases for the "res" oneof.</summary>
    public enum ResOneofCase {
      None = 0,
      Payload = 1,
      Progress = 2,
      Error = 3,
    }
    private ResOneofCase resCase_ = ResOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResOneofCase ResCase {
      get { return resCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearRes() {
      resCase_ = ResOneofCase.None;
      res_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UploadBuildRes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UploadBuildRes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Payload, other.Payload)) return false;
      if (!object.Equals(Progress, other.Progress)) return false;
      if (!object.Equals(Error, other.Error)) return false;
      if (ResCase != other.ResCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (resCase_ == ResOneofCase.Payload) hash ^= Payload.GetHashCode();
      if (resCase_ == ResOneofCase.Progress) hash ^= Progress.GetHashCode();
      if (resCase_ == ResOneofCase.Error) hash ^= Error.GetHashCode();
      hash ^= (int) resCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (resCase_ == ResOneofCase.Payload) {
        output.WriteRawTag(10);
        output.WriteMessage(Payload);
      }
      if (resCase_ == ResOneofCase.Progress) {
        output.WriteRawTag(18);
        output.WriteMessage(Progress);
      }
      if (resCase_ == ResOneofCase.Error) {
        output.WriteRawTag(26);
        output.WriteMessage(Error);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (resCase_ == ResOneofCase.Payload) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Payload);
      }
      if (resCase_ == ResOneofCase.Progress) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Progress);
      }
      if (resCase_ == ResOneofCase.Error) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Error);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UploadBuildRes other) {
      if (other == null) {
        return;
      }
      switch (other.ResCase) {
        case ResOneofCase.Payload:
          if (Payload == null) {
            Payload = new global::Trail.Cli.Service.Cli.V1.UploadBuildRes.Types.Payload();
          }
          Payload.MergeFrom(other.Payload);
          break;
        case ResOneofCase.Progress:
          if (Progress == null) {
            Progress = new global::Trail.Cli.Service.Cli.V1.Progress();
          }
          Progress.MergeFrom(other.Progress);
          break;
        case ResOneofCase.Error:
          if (Error == null) {
            Error = new global::Trail.Cli.Service.Cli.V1.UploadBuildRes.Types.Error();
          }
          Error.MergeFrom(other.Error);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::Trail.Cli.Service.Cli.V1.UploadBuildRes.Types.Payload subBuilder = new global::Trail.Cli.Service.Cli.V1.UploadBuildRes.Types.Payload();
            if (resCase_ == ResOneofCase.Payload) {
              subBuilder.MergeFrom(Payload);
            }
            input.ReadMessage(subBuilder);
            Payload = subBuilder;
            break;
          }
          case 18: {
            global::Trail.Cli.Service.Cli.V1.Progress subBuilder = new global::Trail.Cli.Service.Cli.V1.Progress();
            if (resCase_ == ResOneofCase.Progress) {
              subBuilder.MergeFrom(Progress);
            }
            input.ReadMessage(subBuilder);
            Progress = subBuilder;
            break;
          }
          case 26: {
            global::Trail.Cli.Service.Cli.V1.UploadBuildRes.Types.Error subBuilder = new global::Trail.Cli.Service.Cli.V1.UploadBuildRes.Types.Error();
            if (resCase_ == ResOneofCase.Error) {
              subBuilder.MergeFrom(Error);
            }
            input.ReadMessage(subBuilder);
            Error = subBuilder;
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the UploadBuildRes message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class Payload : pb::IMessage<Payload> {
        private static readonly pb::MessageParser<Payload> _parser = new pb::MessageParser<Payload>(() => new Payload());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Payload> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Trail.Cli.Service.Cli.V1.UploadBuildRes.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Payload() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Payload(Payload other) : this() {
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Payload Clone() {
          return new Payload(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Payload);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Payload other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Payload other) {
          if (other == null) {
            return;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
            }
          }
        }

      }

      public sealed partial class Error : pb::IMessage<Error> {
        private static readonly pb::MessageParser<Error> _parser = new pb::MessageParser<Error>(() => new Error());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Error> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Trail.Cli.Service.Cli.V1.UploadBuildRes.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Error() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Error(Error other) : this() {
          message_ = other.message_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Error Clone() {
          return new Error(this);
        }

        /// <summary>Field number for the "message" field.</summary>
        public const int MessageFieldNumber = 1;
        private string message_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Message {
          get { return message_; }
          set {
            message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Error);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Error other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Message != other.Message) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Message.Length != 0) hash ^= Message.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Message.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Message);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Message.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Error other) {
          if (other == null) {
            return;
          }
          if (other.Message.Length != 0) {
            Message = other.Message;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Message = input.ReadString();
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  public sealed partial class RunDevServerReq : pb::IMessage<RunDevServerReq> {
    private static readonly pb::MessageParser<RunDevServerReq> _parser = new pb::MessageParser<RunDevServerReq>(() => new RunDevServerReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RunDevServerReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Trail.Cli.Service.Cli.V1.CliReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RunDevServerReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RunDevServerReq(RunDevServerReq other) : this() {
      switch (other.PayloadCase) {
        case PayloadOneofCase.Start:
          Start = other.Start.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RunDevServerReq Clone() {
      return new RunDevServerReq(this);
    }

    /// <summary>Field number for the "start" field.</summary>
    public const int StartFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Trail.Cli.Service.Cli.V1.RunDevServerReq.Types.Start Start {
      get { return payloadCase_ == PayloadOneofCase.Start ? (global::Trail.Cli.Service.Cli.V1.RunDevServerReq.Types.Start) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.Start;
      }
    }

    private object payload_;
    /// <summary>Enum of possible cases for the "payload" oneof.</summary>
    public enum PayloadOneofCase {
      None = 0,
      Start = 1,
    }
    private PayloadOneofCase payloadCase_ = PayloadOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PayloadOneofCase PayloadCase {
      get { return payloadCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearPayload() {
      payloadCase_ = PayloadOneofCase.None;
      payload_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RunDevServerReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RunDevServerReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Start, other.Start)) return false;
      if (PayloadCase != other.PayloadCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (payloadCase_ == PayloadOneofCase.Start) hash ^= Start.GetHashCode();
      hash ^= (int) payloadCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (payloadCase_ == PayloadOneofCase.Start) {
        output.WriteRawTag(10);
        output.WriteMessage(Start);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (payloadCase_ == PayloadOneofCase.Start) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Start);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RunDevServerReq other) {
      if (other == null) {
        return;
      }
      switch (other.PayloadCase) {
        case PayloadOneofCase.Start:
          if (Start == null) {
            Start = new global::Trail.Cli.Service.Cli.V1.RunDevServerReq.Types.Start();
          }
          Start.MergeFrom(other.Start);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::Trail.Cli.Service.Cli.V1.RunDevServerReq.Types.Start subBuilder = new global::Trail.Cli.Service.Cli.V1.RunDevServerReq.Types.Start();
            if (payloadCase_ == PayloadOneofCase.Start) {
              subBuilder.MergeFrom(Start);
            }
            input.ReadMessage(subBuilder);
            Start = subBuilder;
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the RunDevServerReq message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class Start : pb::IMessage<Start> {
        private static readonly pb::MessageParser<Start> _parser = new pb::MessageParser<Start>(() => new Start());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Start> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Trail.Cli.Service.Cli.V1.RunDevServerReq.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Start() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Start(Start other) : this() {
          projectPath_ = other.projectPath_;
          port_ = other.port_;
          roomId_ = other.roomId_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Start Clone() {
          return new Start(this);
        }

        /// <summary>Field number for the "project_path" field.</summary>
        public const int ProjectPathFieldNumber = 1;
        private string projectPath_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string ProjectPath {
          get { return projectPath_; }
          set {
            projectPath_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "port" field.</summary>
        public const int PortFieldNumber = 2;
        private uint port_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public uint Port {
          get { return port_; }
          set {
            port_ = value;
          }
        }

        /// <summary>Field number for the "room_id" field.</summary>
        public const int RoomIdFieldNumber = 3;
        private string roomId_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string RoomId {
          get { return roomId_; }
          set {
            roomId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Start);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Start other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (ProjectPath != other.ProjectPath) return false;
          if (Port != other.Port) return false;
          if (RoomId != other.RoomId) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (ProjectPath.Length != 0) hash ^= ProjectPath.GetHashCode();
          if (Port != 0) hash ^= Port.GetHashCode();
          if (RoomId.Length != 0) hash ^= RoomId.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (ProjectPath.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(ProjectPath);
          }
          if (Port != 0) {
            output.WriteRawTag(16);
            output.WriteUInt32(Port);
          }
          if (RoomId.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(RoomId);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (ProjectPath.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(ProjectPath);
          }
          if (Port != 0) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Port);
          }
          if (RoomId.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(RoomId);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Start other) {
          if (other == null) {
            return;
          }
          if (other.ProjectPath.Length != 0) {
            ProjectPath = other.ProjectPath;
          }
          if (other.Port != 0) {
            Port = other.Port;
          }
          if (other.RoomId.Length != 0) {
            RoomId = other.RoomId;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                ProjectPath = input.ReadString();
                break;
              }
              case 16: {
                Port = input.ReadUInt32();
                break;
              }
              case 26: {
                RoomId = input.ReadString();
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  public sealed partial class RunDevServerRes : pb::IMessage<RunDevServerRes> {
    private static readonly pb::MessageParser<RunDevServerRes> _parser = new pb::MessageParser<RunDevServerRes>(() => new RunDevServerRes());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RunDevServerRes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Trail.Cli.Service.Cli.V1.CliReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RunDevServerRes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RunDevServerRes(RunDevServerRes other) : this() {
      switch (other.ResCase) {
        case ResOneofCase.Started:
          Started = other.Started.Clone();
          break;
        case ResOneofCase.Error:
          Error = other.Error.Clone();
          break;
        case ResOneofCase.PlayerConnected:
          PlayerConnected = other.PlayerConnected.Clone();
          break;
        case ResOneofCase.PlayerDisconnected:
          PlayerDisconnected = other.PlayerDisconnected.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RunDevServerRes Clone() {
      return new RunDevServerRes(this);
    }

    /// <summary>Field number for the "started" field.</summary>
    public const int StartedFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Empty Started {
      get { return resCase_ == ResOneofCase.Started ? (global::Google.Protobuf.WellKnownTypes.Empty) res_ : null; }
      set {
        res_ = value;
        resCase_ = value == null ? ResOneofCase.None : ResOneofCase.Started;
      }
    }

    /// <summary>Field number for the "error" field.</summary>
    public const int ErrorFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Trail.Cli.Service.Cli.V1.RunDevServerRes.Types.Error Error {
      get { return resCase_ == ResOneofCase.Error ? (global::Trail.Cli.Service.Cli.V1.RunDevServerRes.Types.Error) res_ : null; }
      set {
        res_ = value;
        resCase_ = value == null ? ResOneofCase.None : ResOneofCase.Error;
      }
    }

    /// <summary>Field number for the "player_connected" field.</summary>
    public const int PlayerConnectedFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Empty PlayerConnected {
      get { return resCase_ == ResOneofCase.PlayerConnected ? (global::Google.Protobuf.WellKnownTypes.Empty) res_ : null; }
      set {
        res_ = value;
        resCase_ = value == null ? ResOneofCase.None : ResOneofCase.PlayerConnected;
      }
    }

    /// <summary>Field number for the "player_disconnected" field.</summary>
    public const int PlayerDisconnectedFieldNumber = 4;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Empty PlayerDisconnected {
      get { return resCase_ == ResOneofCase.PlayerDisconnected ? (global::Google.Protobuf.WellKnownTypes.Empty) res_ : null; }
      set {
        res_ = value;
        resCase_ = value == null ? ResOneofCase.None : ResOneofCase.PlayerDisconnected;
      }
    }

    private object res_;
    /// <summary>Enum of possible cases for the "res" oneof.</summary>
    public enum ResOneofCase {
      None = 0,
      Started = 1,
      Error = 2,
      PlayerConnected = 3,
      PlayerDisconnected = 4,
    }
    private ResOneofCase resCase_ = ResOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResOneofCase ResCase {
      get { return resCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearRes() {
      resCase_ = ResOneofCase.None;
      res_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RunDevServerRes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RunDevServerRes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Started, other.Started)) return false;
      if (!object.Equals(Error, other.Error)) return false;
      if (!object.Equals(PlayerConnected, other.PlayerConnected)) return false;
      if (!object.Equals(PlayerDisconnected, other.PlayerDisconnected)) return false;
      if (ResCase != other.ResCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (resCase_ == ResOneofCase.Started) hash ^= Started.GetHashCode();
      if (resCase_ == ResOneofCase.Error) hash ^= Error.GetHashCode();
      if (resCase_ == ResOneofCase.PlayerConnected) hash ^= PlayerConnected.GetHashCode();
      if (resCase_ == ResOneofCase.PlayerDisconnected) hash ^= PlayerDisconnected.GetHashCode();
      hash ^= (int) resCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (resCase_ == ResOneofCase.Started) {
        output.WriteRawTag(10);
        output.WriteMessage(Started);
      }
      if (resCase_ == ResOneofCase.Error) {
        output.WriteRawTag(18);
        output.WriteMessage(Error);
      }
      if (resCase_ == ResOneofCase.PlayerConnected) {
        output.WriteRawTag(26);
        output.WriteMessage(PlayerConnected);
      }
      if (resCase_ == ResOneofCase.PlayerDisconnected) {
        output.WriteRawTag(34);
        output.WriteMessage(PlayerDisconnected);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (resCase_ == ResOneofCase.Started) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Started);
      }
      if (resCase_ == ResOneofCase.Error) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Error);
      }
      if (resCase_ == ResOneofCase.PlayerConnected) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PlayerConnected);
      }
      if (resCase_ == ResOneofCase.PlayerDisconnected) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PlayerDisconnected);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RunDevServerRes other) {
      if (other == null) {
        return;
      }
      switch (other.ResCase) {
        case ResOneofCase.Started:
          if (Started == null) {
            Started = new global::Google.Protobuf.WellKnownTypes.Empty();
          }
          Started.MergeFrom(other.Started);
          break;
        case ResOneofCase.Error:
          if (Error == null) {
            Error = new global::Trail.Cli.Service.Cli.V1.RunDevServerRes.Types.Error();
          }
          Error.MergeFrom(other.Error);
          break;
        case ResOneofCase.PlayerConnected:
          if (PlayerConnected == null) {
            PlayerConnected = new global::Google.Protobuf.WellKnownTypes.Empty();
          }
          PlayerConnected.MergeFrom(other.PlayerConnected);
          break;
        case ResOneofCase.PlayerDisconnected:
          if (PlayerDisconnected == null) {
            PlayerDisconnected = new global::Google.Protobuf.WellKnownTypes.Empty();
          }
          PlayerDisconnected.MergeFrom(other.PlayerDisconnected);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::Google.Protobuf.WellKnownTypes.Empty subBuilder = new global::Google.Protobuf.WellKnownTypes.Empty();
            if (resCase_ == ResOneofCase.Started) {
              subBuilder.MergeFrom(Started);
            }
            input.ReadMessage(subBuilder);
            Started = subBuilder;
            break;
          }
          case 18: {
            global::Trail.Cli.Service.Cli.V1.RunDevServerRes.Types.Error subBuilder = new global::Trail.Cli.Service.Cli.V1.RunDevServerRes.Types.Error();
            if (resCase_ == ResOneofCase.Error) {
              subBuilder.MergeFrom(Error);
            }
            input.ReadMessage(subBuilder);
            Error = subBuilder;
            break;
          }
          case 26: {
            global::Google.Protobuf.WellKnownTypes.Empty subBuilder = new global::Google.Protobuf.WellKnownTypes.Empty();
            if (resCase_ == ResOneofCase.PlayerConnected) {
              subBuilder.MergeFrom(PlayerConnected);
            }
            input.ReadMessage(subBuilder);
            PlayerConnected = subBuilder;
            break;
          }
          case 34: {
            global::Google.Protobuf.WellKnownTypes.Empty subBuilder = new global::Google.Protobuf.WellKnownTypes.Empty();
            if (resCase_ == ResOneofCase.PlayerDisconnected) {
              subBuilder.MergeFrom(PlayerDisconnected);
            }
            input.ReadMessage(subBuilder);
            PlayerDisconnected = subBuilder;
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the RunDevServerRes message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class Error : pb::IMessage<Error> {
        private static readonly pb::MessageParser<Error> _parser = new pb::MessageParser<Error>(() => new Error());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Error> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Trail.Cli.Service.Cli.V1.RunDevServerRes.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Error() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Error(Error other) : this() {
          message_ = other.message_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Error Clone() {
          return new Error(this);
        }

        /// <summary>Field number for the "message" field.</summary>
        public const int MessageFieldNumber = 1;
        private string message_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Message {
          get { return message_; }
          set {
            message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Error);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Error other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Message != other.Message) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Message.Length != 0) hash ^= Message.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Message.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Message);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Message.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Error other) {
          if (other == null) {
            return;
          }
          if (other.Message.Length != 0) {
            Message = other.Message;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Message = input.ReadString();
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  public sealed partial class RunBuildReq : pb::IMessage<RunBuildReq> {
    private static readonly pb::MessageParser<RunBuildReq> _parser = new pb::MessageParser<RunBuildReq>(() => new RunBuildReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RunBuildReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Trail.Cli.Service.Cli.V1.CliReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RunBuildReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RunBuildReq(RunBuildReq other) : this() {
      switch (other.PayloadCase) {
        case PayloadOneofCase.Start:
          Start = other.Start.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RunBuildReq Clone() {
      return new RunBuildReq(this);
    }

    /// <summary>Field number for the "start" field.</summary>
    public const int StartFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Trail.Cli.Service.Cli.V1.RunBuildReq.Types.Start Start {
      get { return payloadCase_ == PayloadOneofCase.Start ? (global::Trail.Cli.Service.Cli.V1.RunBuildReq.Types.Start) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.Start;
      }
    }

    private object payload_;
    /// <summary>Enum of possible cases for the "payload" oneof.</summary>
    public enum PayloadOneofCase {
      None = 0,
      Start = 1,
    }
    private PayloadOneofCase payloadCase_ = PayloadOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PayloadOneofCase PayloadCase {
      get { return payloadCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearPayload() {
      payloadCase_ = PayloadOneofCase.None;
      payload_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RunBuildReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RunBuildReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Start, other.Start)) return false;
      if (PayloadCase != other.PayloadCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (payloadCase_ == PayloadOneofCase.Start) hash ^= Start.GetHashCode();
      hash ^= (int) payloadCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (payloadCase_ == PayloadOneofCase.Start) {
        output.WriteRawTag(10);
        output.WriteMessage(Start);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (payloadCase_ == PayloadOneofCase.Start) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Start);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RunBuildReq other) {
      if (other == null) {
        return;
      }
      switch (other.PayloadCase) {
        case PayloadOneofCase.Start:
          if (Start == null) {
            Start = new global::Trail.Cli.Service.Cli.V1.RunBuildReq.Types.Start();
          }
          Start.MergeFrom(other.Start);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::Trail.Cli.Service.Cli.V1.RunBuildReq.Types.Start subBuilder = new global::Trail.Cli.Service.Cli.V1.RunBuildReq.Types.Start();
            if (payloadCase_ == PayloadOneofCase.Start) {
              subBuilder.MergeFrom(Start);
            }
            input.ReadMessage(subBuilder);
            Start = subBuilder;
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the RunBuildReq message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class Start : pb::IMessage<Start> {
        private static readonly pb::MessageParser<Start> _parser = new pb::MessageParser<Start>(() => new Start());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Start> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Trail.Cli.Service.Cli.V1.RunBuildReq.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Start() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Start(Start other) : this() {
          projectPath_ = other.projectPath_;
          buildPath_ = other.buildPath_;
          roomId_ = other.roomId_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Start Clone() {
          return new Start(this);
        }

        /// <summary>Field number for the "project_path" field.</summary>
        public const int ProjectPathFieldNumber = 1;
        private string projectPath_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string ProjectPath {
          get { return projectPath_; }
          set {
            projectPath_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "build_path" field.</summary>
        public const int BuildPathFieldNumber = 2;
        private string buildPath_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string BuildPath {
          get { return buildPath_; }
          set {
            buildPath_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "room_id" field.</summary>
        public const int RoomIdFieldNumber = 3;
        private string roomId_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string RoomId {
          get { return roomId_; }
          set {
            roomId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Start);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Start other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (ProjectPath != other.ProjectPath) return false;
          if (BuildPath != other.BuildPath) return false;
          if (RoomId != other.RoomId) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (ProjectPath.Length != 0) hash ^= ProjectPath.GetHashCode();
          if (BuildPath.Length != 0) hash ^= BuildPath.GetHashCode();
          if (RoomId.Length != 0) hash ^= RoomId.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (ProjectPath.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(ProjectPath);
          }
          if (BuildPath.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(BuildPath);
          }
          if (RoomId.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(RoomId);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (ProjectPath.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(ProjectPath);
          }
          if (BuildPath.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(BuildPath);
          }
          if (RoomId.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(RoomId);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Start other) {
          if (other == null) {
            return;
          }
          if (other.ProjectPath.Length != 0) {
            ProjectPath = other.ProjectPath;
          }
          if (other.BuildPath.Length != 0) {
            BuildPath = other.BuildPath;
          }
          if (other.RoomId.Length != 0) {
            RoomId = other.RoomId;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                ProjectPath = input.ReadString();
                break;
              }
              case 18: {
                BuildPath = input.ReadString();
                break;
              }
              case 26: {
                RoomId = input.ReadString();
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  public sealed partial class RunBuildRes : pb::IMessage<RunBuildRes> {
    private static readonly pb::MessageParser<RunBuildRes> _parser = new pb::MessageParser<RunBuildRes>(() => new RunBuildRes());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RunBuildRes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Trail.Cli.Service.Cli.V1.CliReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RunBuildRes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RunBuildRes(RunBuildRes other) : this() {
      switch (other.ResCase) {
        case ResOneofCase.Progress:
          Progress = other.Progress.Clone();
          break;
        case ResOneofCase.Error:
          Error = other.Error.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RunBuildRes Clone() {
      return new RunBuildRes(this);
    }

    /// <summary>Field number for the "progress" field.</summary>
    public const int ProgressFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Trail.Cli.Service.Cli.V1.Progress Progress {
      get { return resCase_ == ResOneofCase.Progress ? (global::Trail.Cli.Service.Cli.V1.Progress) res_ : null; }
      set {
        res_ = value;
        resCase_ = value == null ? ResOneofCase.None : ResOneofCase.Progress;
      }
    }

    /// <summary>Field number for the "error" field.</summary>
    public const int ErrorFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Trail.Cli.Service.Cli.V1.RunBuildRes.Types.Error Error {
      get { return resCase_ == ResOneofCase.Error ? (global::Trail.Cli.Service.Cli.V1.RunBuildRes.Types.Error) res_ : null; }
      set {
        res_ = value;
        resCase_ = value == null ? ResOneofCase.None : ResOneofCase.Error;
      }
    }

    private object res_;
    /// <summary>Enum of possible cases for the "res" oneof.</summary>
    public enum ResOneofCase {
      None = 0,
      Progress = 1,
      Error = 2,
    }
    private ResOneofCase resCase_ = ResOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResOneofCase ResCase {
      get { return resCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearRes() {
      resCase_ = ResOneofCase.None;
      res_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RunBuildRes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RunBuildRes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Progress, other.Progress)) return false;
      if (!object.Equals(Error, other.Error)) return false;
      if (ResCase != other.ResCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (resCase_ == ResOneofCase.Progress) hash ^= Progress.GetHashCode();
      if (resCase_ == ResOneofCase.Error) hash ^= Error.GetHashCode();
      hash ^= (int) resCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (resCase_ == ResOneofCase.Progress) {
        output.WriteRawTag(10);
        output.WriteMessage(Progress);
      }
      if (resCase_ == ResOneofCase.Error) {
        output.WriteRawTag(18);
        output.WriteMessage(Error);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (resCase_ == ResOneofCase.Progress) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Progress);
      }
      if (resCase_ == ResOneofCase.Error) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Error);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RunBuildRes other) {
      if (other == null) {
        return;
      }
      switch (other.ResCase) {
        case ResOneofCase.Progress:
          if (Progress == null) {
            Progress = new global::Trail.Cli.Service.Cli.V1.Progress();
          }
          Progress.MergeFrom(other.Progress);
          break;
        case ResOneofCase.Error:
          if (Error == null) {
            Error = new global::Trail.Cli.Service.Cli.V1.RunBuildRes.Types.Error();
          }
          Error.MergeFrom(other.Error);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::Trail.Cli.Service.Cli.V1.Progress subBuilder = new global::Trail.Cli.Service.Cli.V1.Progress();
            if (resCase_ == ResOneofCase.Progress) {
              subBuilder.MergeFrom(Progress);
            }
            input.ReadMessage(subBuilder);
            Progress = subBuilder;
            break;
          }
          case 18: {
            global::Trail.Cli.Service.Cli.V1.RunBuildRes.Types.Error subBuilder = new global::Trail.Cli.Service.Cli.V1.RunBuildRes.Types.Error();
            if (resCase_ == ResOneofCase.Error) {
              subBuilder.MergeFrom(Error);
            }
            input.ReadMessage(subBuilder);
            Error = subBuilder;
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the RunBuildRes message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class Error : pb::IMessage<Error> {
        private static readonly pb::MessageParser<Error> _parser = new pb::MessageParser<Error>(() => new Error());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Error> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Trail.Cli.Service.Cli.V1.RunBuildRes.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Error() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Error(Error other) : this() {
          message_ = other.message_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Error Clone() {
          return new Error(this);
        }

        /// <summary>Field number for the "message" field.</summary>
        public const int MessageFieldNumber = 1;
        private string message_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Message {
          get { return message_; }
          set {
            message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Error);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Error other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Message != other.Message) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Message.Length != 0) hash ^= Message.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Message.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Message);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Message.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Error other) {
          if (other == null) {
            return;
          }
          if (other.Message.Length != 0) {
            Message = other.Message;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Message = input.ReadString();
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code

#endif
